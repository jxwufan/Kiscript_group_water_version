//
// Created by fan wu on 1/5/16.
//

#ifndef KISCRIPT_ID_STRING_H
#define KISCRIPT_ID_STRING_H

char *token_type_str[] = {
        "TOKEN_ERROR",
        "TOKEN_LEXICAL_WHITE_SPACE",
        "TOKEN_LEXICAL_LINE_TERMINATOR",
        "TOKEN_LEXICAL_MULTI_LINE_COMMENT",
        "TOKEN_LEXICAL_SINGLE_LINE_COMMENT",
        "TOKEN_LEXICAL_IDENTIFIER",
        "TOKEN_LEXICAL_KEYWORD",
        "TOKEN_LEXICAL_FUTURE_RESERVED_WORD",
        "TOKEN_LEXICAL_PUNCTUATOR",
        "TOKEN_LEXICAL_NULL_LITERAL",
        "TOKEN_LEXICAL_BOOLEAN_LITERAL",
        "TOKEN_LEXICAL_NUMERIC_LITERAL",
        "TOKEN_LEXICAL_STRING_LITERAL",
        "TOKEN_EXPRESSION_ARRAY_LITERAL",
        "TOKEN_EXPRESSION_OBJECT_LITERAL",
        "TOKEN_EXPRESSION_PROPERTY_ASSIGNMENT_PLAIN",
        "TOKEN_EXPRESSION_PROPERTY_ASSIGNMENT_GET",
        "TOKEN_EXPRESSION_PROPERTY_ASSIGNMENT_SET",
        "TOKEN_EXPRESSION_PROPERTY_ACCESSOR",
        "TOKEN_EXPRESSION_CALL_EXPRESSION",
        "TOKEN_EXPRESSION_ARGUMENT_LIST",
        "TOKEN_EXPRESSION_NEW_EXPRESSION",
        "TOKEN_EXPRESSION_POSTFIX_EXPRESSION",
        "TOKEN_EXPRESSION_UNARY_EXPRESSION",
        "TOKEN_EXPRESSION_MULTIPLICATIVE_EXPRESSION",
        "TOKEN_EXPRESSION_ADDITIVE_EXPRESSION",
        "TOKEN_EXPRESSION_SHIFT_EXPRESSION",
        "TOKEN_EXPRESSION_RELATIONAL_EXPRESSION",
        "TOKEN_EXPRESSION_EQUALITY_EXPRESSION",
        "TOKEN_EXPRESSION_BITWISE_AND_EXPRESSION",
        "TOKEN_EXPRESSION_BITWISE_XOR_EXPRESSION",
        "TOKEN_EXPRESSION_BITWISE_OR_EXPRESSION",
        "TOKEN_EXPRESSION_LOGICAL_AND_EXPRESSION",
        "TOKEN_EXPRESSION_LOGICAL_OR_EXPRESSION",
        "TOKEN_EXPRESSION_CONDITIONAL_EXPRESSION",
        "TOKEN_EXPRESSION_ASSIGNMENT_EXPRESSION",
        "TOKEN_EXPRESSION_EXPRESSION",
        "TOKEN_STATEMENT_BLOCK",
        "TOKEN_STATEMENT_VARIABLE_STATEMENT",
        "TOKEN_STATEMENT_VARIABLE_DECLARATION",
        "TOKEN_STATEMENT_EMPTY_STATEMENT",
        "TOKEN_STATEMENT_IF_STATEMENT",
        "TOKEN_STATEMENT_DO_WHILE_STATEMENT",
        "TOKEN_STATEMENT_WHILE_STATEMENT",
        "TOKEN_STATEMENT_VARIABLE_DECLARATION_LIST",
        "TOKEN_STATEMENT_FOR_STATEMENT",
        "TOKEN_STATEMENT_FOR_EACH_STATEMENT",
        "TOKEN_STATEMENT_CONTINUE_STATEMENT",
        "TOKEN_STATEMENT_BREAK_STATEMENT",
        "TOKEN_STATEMENT_RETURN_STATEMENT",
        "TOKEN_STATEMENT_LABELED_STATEMENT",
        "TOKEN_STATEMENT_SWITCH_STATEMENT",
        "TOKEN_STATEMENT_CASE_CLAUSE",
        "TOKEN_STATEMENT_DEFAULT_CLAUSE",
        "TOKEN_STATEMENT_THROW_STATEMENT",
        "TOKEN_STATEMENT_TRY_STATEMENT",
        "TOKEN_STATEMENT_DEBUGGER_STATEMENT",
        "TOKEN_STATEMENT_EXPRESSION_STATEMENT",
        "TOKEN_FUNCTION_FUNCTION_DECLARATION",
        "TOKEN_FUNCTION_FUNCTION_EXPRESSION",
        "TOKEN_FUNCTION_FORMAL_PARAMETER_LIST",
        "TOKEN_FUNCTION_FUNCTION_BODY",
        "TOKEN_PROGRAM_PROGRAM"
};

char *punctuator_type_str[] = {
    "PUNCTUATOR_INCREMENT",
    "PUNCTUATOR_ADD_ASSIGNMENT",
    "PUNCTUATOR_PLUS",
    "PUNCTUATOR_MODULO_ASSIGNMENT",
    "PUNCTUATOR_PERCENT",
    "PUNCTUATOR_LOGICAL_AND",
    "PUNCTUATOR_BITWISE_AND_ASSIGNMENT",
    "PUNCTUATOR_AMPERSAND",
    "PUNCTUATOR_MULTIPLY_ASSIGNMENT",
    "PUNCTUATOR_ASTERISK",
    "PUNCTUATOR_CURLY_BRACE_RIGHT",
    "PUNCTUATOR_CURLY_BRACE_LEFT",
    "PUNCTUATOR_SQUARE_BRACKET_RIGHT",
    "PUNCTUATOR_SQUARE_BRACKET_LEFT",
    "PUNCTUATOR_PARENTHESIS_RIGHT",
    "PUNCTUATOR_PARENTHESIS_LEFT",
    "PUNCTUATOR_DOT",
    "PUNCTUATOR_DIVIDE_ASSIGNMENT",
    "PUNCTUATOR_SLASH",
    "PUNCTUATOR_QUESTION_MARK",
    "PUNCTUATOR_STRICT_DOES_NOT_EQUAL",
    "PUNCTUATOR_DOES_NOT_EQUAL",
    "PUNCTUATOR_EXCLAMATION",
    "PUNCTUATOR_COLON",
    "PUNCTUATOR_SEMICOLON",
    "PUNCTUATOR_COMMA",
    "PUNCTUATOR_DECREMENT",
    "PUNCTUATOR_SUBTRACT_ASSIGNMENT",
    "PUNCTUATOR_MINUS",
    "PUNCTUATOR_LOGICAL_OR",
    "PUNCTUATOR_BITWISE_OR_ASSIGNMENT",
    "PUNCTUATOR_VERTICAL_BAR",
    "PUNCTUATOR_UNSIGNED_RIGHT_SHIFT_ASSIGNMENT",
    "PUNCTUATOR_UNSIGNED_RIGHT_SHIFT",
    "PUNCTUATOR_SIGNED_RIGHT_SHIFT_ASSIGNMENT",
    "PUNCTUATOR_SIGNED_RIGHT_SHIFT",
    "PUNCTUATOR_GREATER_THAN_OR_EQUAL",
    "PUNCTUATOR_ANGLE_BRACKET_RIGHT",
    "PUNCTUATOR_STRICT_EQUALS",
    "PUNCTUATOR_EQUALS",
    "PUNCTUATOR_EQUALS_SIGN",
    "PUNCTUATOR_LESS_THAN_OR_EQUAL",
    "PUNCTUATOR_LEFT_SHIFT_ASSIGNMENT",
    "PUNCTUATOR_LEFT_SHIFT",
    "PUNCTUATOR_ANGLE_BRACKET_LEFT",
    "PUNCTUATOR_TILDE",
    "PUNCTUATOR_BITWISE_XOR_ASSIGNMENT",
    "PUNCTUATOR_CARET"
};

#endif //KISCRIPT_ID_STRING_H
